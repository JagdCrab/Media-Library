<Page x:Class="Media_Library.Windows.VideoDetailsPage"
      x:Name="VideoDetailsPageView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:tk="clr-namespace:System.Windows.Controls;assembly=DotNetProjects.Layout.Toolkit"
      xmlns:itk="clr-namespace:System.Windows.Controls;assembly=DotNetProjects.Input.Toolkit"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
      xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
      xmlns:local="clr-namespace:Media_Library.Windows"
      xmlns:comp="clr-namespace:Media_Library.Components"
      mc:Ignorable="d" 
      Height="Auto" 
      Width="275"
      Title="VideoDetailsPage">

    <Page.Resources>
        <comp:VisibilityConverter x:Key="VisibilityConverter"/>
        <comp:BindingProxy x:Key="EditMode" Data="{Binding EditMode}"/>
    </Page.Resources>
    
    <Border Margin="4" BorderBrush="Gray" BorderThickness="1">
        <Grid>
            <Grid.Resources>
                <ResourceDictionary Source="..\Styles\TextBlock.xaml"/>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="210"/>
                <RowDefinition Height="*" MinHeight="50"/>
                <RowDefinition Height="215"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="210"/>
                    <ColumnDefinition Width="55"/>
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0" Margin="5" Background="LightGray">
                    <Grid>
                        <Image Opacity="50" Source="..\Resources\DropOff.png"/>
                        <Image Source="{Binding Icon.Value}"/>
                        <Border Background="LightGray" Opacity="0.01" Visibility="{Binding EditMode.Value, Converter={StaticResource VisibilityConverter}}" AllowDrop="True" DragDrop.DragEnter="Border_DragEnter" DragDrop.DragLeave="Border_DragLeave" DragDrop.Drop="Border_Drop">
                            <!--<Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="AllowDrop" Value="False"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding EditMode.Value}" Value="True">
                                            <Setter Property="AllowDrop" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>-->
                        </Border>
                    </Grid>
                </Border>

                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="15"/>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="5"/>
                    </Grid.RowDefinitions>

                    <Border Grid.Row="0" Margin="0,5,5,0">
                        <Image Width="30" Height="30" RenderOptions.BitmapScalingMode="HighQuality">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Setter Property="Source" Value="..\Resources\PlaylistOff.png"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Playlist.Value}" Value="True">
                                            <Setter Property="Source" Value="..\Resources\PlaylistOn.png"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                            <Image.InputBindings>
                                <MouseBinding MouseAction="LeftClick" Command="{Binding SwitchPlaylist}"/>
                            </Image.InputBindings>
                        </Image>
                    </Border>
                    <Separator Grid.Row="1" Margin="0,0,5,0"/>
                    <Border Grid.Row="2" Margin="0,5,5,0">
                        <Image Width="30" Height="30" RenderOptions.BitmapScalingMode="HighQuality">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Setter Property="Source" Value="..\Resources\FavOff.png"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Favorite.Value}" Value="True">
                                            <Setter Property="Source" Value="..\Resources\FavOn.png"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                            <Image.InputBindings>
                                <MouseBinding MouseAction="LeftClick" Command="{Binding SwitchFavorite}"/>
                            </Image.InputBindings>
                        </Image>
                    </Border>


                    <Grid Grid.Row="3" Margin="0,5,5,0" DataContext="{Binding ScoreUI}">
                        <Grid.Resources>
                            <ResourceDictionary Source="..\Styles\ContextMenu.xaml"/>
                        </Grid.Resources>
                        <Border>
                            <Border.ContextMenu>
                                <ContextMenu IsEnabled="{Binding Data.Value, Source={StaticResource EditMode}}" Visibility="{Binding Data.Value, Source={StaticResource EditMode}, Converter={StaticResource VisibilityConverter}}" ItemsSource="{Binding PossibleStates}">
                                    <ContextMenu.ItemContainerStyle>
                                        <Style TargetType="{x:Type MenuItem}">
                                            <Setter Property="Command" Value="{Binding ChangeState}"/>
                                            <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                                        </Style>
                                    </ContextMenu.ItemContainerStyle>
                                    <ContextMenu.ItemTemplate>
                                        <DataTemplate>
                                            <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="25"/>
                                                    <ColumnDefinition Width="25"/>
                                                </Grid.ColumnDefinitions>
                                                <Border BorderThickness="0" CornerRadius="5 0 0 5" Background="{Binding Background.Value}" Grid.Column="0">
                                                    <TextBlock Margin="5 1" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" FontWeight="Bold" Text="{Binding Score.Value}"/>
                                                </Border>
                                                <Border BorderThickness="0" CornerRadius="0 5 5 0" Background="#7B7981" Grid.Column="1">
                                                    <TextBlock Margin="5 1" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" FontWeight="Bold" Text="10"/>
                                                </Border>
                                            </Grid>
                                        </DataTemplate>
                                    </ContextMenu.ItemTemplate>
                                </ContextMenu>
                            </Border.ContextMenu>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25"/>
                                    <ColumnDefinition Width="25"/>
                                </Grid.ColumnDefinitions>
                                <Border BorderThickness="0" CornerRadius="5 0 0 5" Background="{Binding Background.Value}" Grid.Column="0">
                                    <TextBlock Margin="5 1" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" FontWeight="Bold" Text="{Binding Score.Value}"/>
                                </Border>
                                <Border BorderThickness="0" CornerRadius="0 5 5 0" Background="#7B7981" Grid.Column="1">
                                    <TextBlock Margin="5 1" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" FontWeight="Bold" Text="10"/>
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>

                    <Grid Grid.Row="4" Margin="0,5,5,0" DataContext="{Binding IntensityUI}">
                        <Grid.Resources>
                            <ResourceDictionary Source="..\Styles\ContextMenu.xaml"/>
                        </Grid.Resources>
                        <Border Background="{Binding Background.Value}" CornerRadius="3">
                            <Border.ContextMenu>
                                <ContextMenu IsEnabled="{Binding Data.Value, Source={StaticResource EditMode}}" Visibility="{Binding Data.Value, Source={StaticResource EditMode}, Converter={StaticResource VisibilityConverter}}" ItemsSource="{Binding PossibleStates}">
                                    <ContextMenu.ItemContainerStyle>
                                        <Style TargetType="{x:Type MenuItem}">
                                            <Setter Property="Command" Value="{Binding ChangeState}"/>
                                            <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                                        </Style>
                                    </ContextMenu.ItemContainerStyle>
                                    <ContextMenu.ItemTemplate>
                                        <DataTemplate>
                                            <Border Margin="1" Background="{Binding Background.Value}" CornerRadius="3">
                                                <TextBlock Margin="5 3 5 3" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" Text="{Binding Intensity.Value}" Style="{StaticResource Bold}"/>
                                            </Border>
                                        </DataTemplate>
                                    </ContextMenu.ItemTemplate>
                                </ContextMenu>
                            </Border.ContextMenu>
                            <TextBlock Margin="7 3 7 3" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding Intensity.Value}" Style="{StaticResource Bold}"/>
                        </Border>
                    </Grid>

                    <Grid Grid.Row="5" Margin="0,5,5,0" DataContext="{Binding DurationUI}">
                        <Border Background="{Binding Background.Value}" CornerRadius="3">
                            <TextBlock Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding Duration.Value}" Style="{StaticResource Bold}"/>
                        </Border>
                    </Grid>
                </Grid>
            </Grid>

            <Border Grid.Row="1">
                <Border.Resources>
                    <ResourceDictionary>
                        <DataTemplate x:Key="NewTagTemplate">
                            <Border>
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Margin" Value="5,2,0,2"/>
                                        <Setter Property="BorderThickness" Value="2"/>
                                        <Setter Property="BorderBrush" Value="Gray"/>
                                        <Setter Property="CornerRadius" Value="5"/>
                                        <Setter Property="Height" Value="25"/>
                                    </Style>
                                </Border.Style>
                                <itk:AutoCompleteBox Text="{Binding Text.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding AutoCompleteCollection}" comp:FocusBehaviour.ForceFocus="{Binding IsFocused.Value}">
                                    <itk:AutoCompleteBox.Style>
                                        <Style TargetType="itk:AutoCompleteBox">
                                            <Setter Property="FilterMode" Value="Contains"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Setter Property="Margin" Value="3,0"/>
                                            <Setter Property="Foreground" Value="#4E4F58"/>
                                            <Setter Property="FontSize" Value="11"/>
                                            <Setter Property="FontWeight" Value="DemiBold"/>
                                        </Style>
                                    </itk:AutoCompleteBox.Style>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Loaded">
                                            <i:InvokeCommandAction Command="{Binding TakeFocusByForce}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <itk:AutoCompleteBox.InputBindings>
                                        <KeyBinding Key="Enter" Command="{Binding Submit}"/>
                                        <KeyBinding Key="Esc" Command="{Binding Cancel}"/>
                                    </itk:AutoCompleteBox.InputBindings>
                                </itk:AutoCompleteBox>
                            </Border>
                        </DataTemplate>

                        <DataTemplate x:Key="TagTemplate">
                            <Border Background="{Binding Background.Value}">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Margin" Value="5,2,0,2"/>
                                        <Setter Property="BorderThickness" Value="2"/>
                                        <Setter Property="BorderBrush" Value="Gray"/>
                                        <Setter Property="CornerRadius" Value="5"/>
                                        <Setter Property="Height" Value="25"/>
                                    </Style>
                                </Border.Style>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*" MinWidth="20"/>
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="RemoveButton" Grid.Column="0" Visibility="{Binding Data.Value, Source={StaticResource EditMode}, Converter={StaticResource VisibilityConverter}}">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="Width" Value="20"/>
                                                <Setter Property="Background" Value="LightGray"/>
                                                <Setter Property="BorderBrush" Value="Gray"/>
                                                <Setter Property="BorderThickness" Value="0,0,2,0"/>
                                                <Setter Property="CornerRadius" Value="3,0,0,3"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="Gray"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Border.InputBindings>
                                            <MouseBinding MouseAction="LeftClick" Command="{Binding RemoveTag}"/>
                                        </Border.InputBindings>
                                        <Polygon>
                                            <Polygon.Style>
                                                <Style TargetType="Polygon">
                                                    <Setter Property="Width" Value="10"/>
                                                    <Setter Property="Height" Value="10"/>
                                                    <Setter Property="Stretch" Value="Fill"/>
                                                    <Setter Property="Fill" Value="Gray"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=RemoveButton}" Value="True">
                                                            <Setter Property="Fill" Value="White"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Polygon.Style>
                                            <Polygon.Points>
                                                <Point X="3" Y="5"/>
                                                <Point X="5" Y="3"/>
                                                <Point X="10" Y="8"/>
                                                <Point X="15" Y="3"/>
                                                <Point X="17" Y="5"/>
                                                <Point X="12" Y="10"/>
                                                <Point X="17" Y="15"/>
                                                <Point X="15" Y="17"/>
                                                <Point X="10" Y="12"/>
                                                <Point X="5" Y="17"/>
                                                <Point X="3" Y="15"/>
                                                <Point X="8" Y="10"/>
                                            </Polygon.Points>
                                        </Polygon>
                                    </Border>
                                    <Border Grid.Column="1">
                                        <Border.Resources>
                                            <ResourceDictionary Source="..\Styles\ContextMenu.xaml"/>
                                        </Border.Resources>
                                        <Border.ContextMenu>
                                            <ContextMenu IsEnabled="{Binding Data.Value, Source={StaticResource EditMode}}" Visibility="{Binding Data.Value, Source={StaticResource EditMode}, Converter={StaticResource VisibilityConverter}}" ItemsSource="{Binding PossibleIntensityStates}">
                                                <ContextMenu.ItemContainerStyle>
                                                    <Style TargetType="{x:Type MenuItem}">
                                                        <Setter Property="Command" Value="{Binding ChangeState}"/>
                                                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                                                    </Style>
                                                </ContextMenu.ItemContainerStyle>
                                                <ContextMenu.ItemTemplate>
                                                    <DataTemplate>
                                                        <Border Margin="1" Background="{Binding Background}" CornerRadius="3">
                                                            <TextBlock Margin="5 3 5 3" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#50514F" Text="{Binding Description}" Style="{StaticResource Bold}"/>
                                                        </Border>
                                                    </DataTemplate>
                                                </ContextMenu.ItemTemplate>
                                            </ContextMenu>
                                        </Border.ContextMenu>
                                        <TextBlock Grid.Column="1" Text="{Binding Text}">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Margin" Value="3,0"/>
                                                    <Setter Property="Foreground" Value="#4E4F58"/>
                                                    <Setter Property="FontSize" Value="12"/>
                                                    <Setter Property="FontWeight" Value="DemiBold"/>
                                                    <Setter Property="TextAlignment" Value="Center"/>
                                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Border>
                                </Grid>
                            </Border>
                        </DataTemplate>
                        
                        <DataTemplate x:Key="AddButtonTemplate">
                            <Border x:Name="AddButton"  Visibility="{Binding Data.Value, Source={StaticResource EditMode}, Converter={StaticResource VisibilityConverter}}">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Margin" Value="2,2,0,2"/>
                                        <Setter Property="Width" Value="25"/>
                                        <Setter Property="Height" Value="25"/>
                                        <Setter Property="CornerRadius" Value="5"/>
                                        <Setter Property="Background" Value="LightGray"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="Gray"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Border.InputBindings>
                                    <MouseBinding MouseAction="LeftClick" Command="{Binding AddNewTag}"/>
                                </Border.InputBindings>
                                <Border>
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="CornerRadius" Value="5"/>
                                            <Setter Property="BorderBrush" Value="Gray"/>
                                            <Setter Property="BorderThickness" Value="2"/>
                                        </Style>
                                    </Border.Style>
                                    <Border.InputBindings>
                                        <MouseBinding MouseAction="LeftClick" Command="{Binding AddNewTag}"/>
                                    </Border.InputBindings>
                                    <Polygon>
                                        <Polygon.Style>
                                            <Style TargetType="Polygon">
                                                <Setter Property="Margin" Value="3"/>
                                                <Setter Property="Width" Value="10"/>
                                                <Setter Property="Height" Value="10"/>
                                                <Setter Property="Stretch" Value="Uniform"/>
                                                <Setter Property="Fill" Value="Gray"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=AddButton}" Value="True">
                                                        <Setter Property="Fill" Value="White"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Polygon.Style>
                                        <Polygon.Points>
                                            <Point X="8.5" Y="0"/>
                                            <Point X="11.5" Y="0"/>
                                            <Point X="11.5" Y="8.5"/>
                                            <Point X="20" Y="8.5"/>
                                            <Point X="20" Y="11.5"/>
                                            <Point X="11.5" Y="11.5"/>
                                            <Point X="11.5" Y="20"/>
                                            <Point X="8.5" Y="20"/>
                                            <Point X="8.5" Y="11.5"/>
                                            <Point X="0" Y="11.5"/>
                                            <Point X="0" Y="8.5"/>
                                            <Point X="8.5" Y="8.5"/>
                                        </Polygon.Points>
                                    </Polygon>
                                </Border>
                            </Border>
                        </DataTemplate>
                    </ResourceDictionary>
                </Border.Resources>
                <ItemsControl DataContext="{Binding VideoTags}" ItemsSource="{Binding Entities}" ItemTemplateSelector="{Binding TemplateSelector}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </Border>
            
            <Border Grid.Row="2" Margin="5">
                <Border.Resources>
                    <ResourceDictionary Source="..\Styles\Accordion.xaml" />
                </Border.Resources>
                <tk:Accordion HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <tk:AccordionItem HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsSelected="False">
                        <tk:AccordionItem.Header>
                            <TextBlock Margin="0,0,0,6" Text="Video Info" Style="{StaticResource Bold}"/>
                        </tk:AccordionItem.Header>
                        <tk:AccordionItem.Content>
                            <ScrollViewer Height="140">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="5"/>
                                        <RowDefinition Height="25"/>
                                        <RowDefinition Height="5"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="5"/>
                                        <RowDefinition Height="25"/>
                                        <RowDefinition Height="5"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="5"/>
                                        <RowDefinition Height="25"/>
                                        <RowDefinition Height="5"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="5"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Separator Grid.Row="0"/>
                                    <TextBlock Grid.Row="1" Margin="10,3" Text="Series" Style="{StaticResource Header}"/>
                                    <Separator Grid.Row="2"/>
                                    <Grid Grid.Row="3">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="25"/>
                                            <RowDefinition Height="25"/>
                                            <RowDefinition Height="25"/>
                                            <RowDefinition Height="25"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="60"/>
                                            <ColumnDefinition>
                                                <ColumnDefinition.Style>
                                                    <Style TargetType="ColumnDefinition">
                                                        <Setter Property="Width" Value="*"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding EditMode.Value}" Value="True">
                                                                <Setter Property="Width" Value="0"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ColumnDefinition.Style>
                                            </ColumnDefinition>
                                            <ColumnDefinition>
                                                <ColumnDefinition.Style>
                                                    <Style TargetType="ColumnDefinition">
                                                        <Setter Property="Width" Value="*"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding EditMode.Value}" Value="False">
                                                                <Setter Property="Width" Value="0"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ColumnDefinition.Style>
                                            </ColumnDefinition>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Margin="3" Text="Alias:" TextAlignment="Right" Style="{StaticResource Bold}"/>
                                        <TextBlock Grid.Row="0" Grid.Column="1" Margin="3" Text="{Binding Alias.Value}"/>
                                        <TextBox Grid.Row="0" Grid.Column="2" Margin="3" Text="{Binding Alias.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  BorderBrush="Gray"/>
                                        <Image Grid.Row="0" Grid.Column="3" Visibility="{Binding AliasError.Value}"/>

                                        <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="3" Text="Series:" TextAlignment="Right" Style="{StaticResource Bold}"/>
                                        <TextBlock Grid.Row="1" Grid.Column="1" Visibility="{Binding DetailsElementsVisibility.Value}" Margin="3" Text="{Binding Series.Value}"/>
                                        <itk:AutoCompleteBox Grid.Row="1" Grid.Column="2" Margin="3" FontFamily="Segoe UI" Foreground="Gray" BorderBrush="Gray"
                                                             FilterMode="Contains"
                                                             ItemsSource="{Binding SeriesAutoCompleteEntities}"
                                                             Text="{Binding Series.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        </itk:AutoCompleteBox>
                                        <Image Grid.Row="0" Grid.Column="3" Visibility="{Binding SeriesError.Value}"/>

                                        <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Margin="3" Text="Alt Alias:" TextAlignment="Right" Style="{StaticResource Bold}"/>
                                        <TextBlock Grid.Row="2" Grid.Column="1" Margin="3" Text="{Binding Alt_Alias.Value}"/>
                                        <TextBox Grid.Row="2" Grid.Column="2" Margin="3" Text="{Binding Alt_Alias.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  BorderBrush="Gray"/>

                                        <TextBlock Grid.Row="3" Grid.Column="0" VerticalAlignment="Center" Margin="3" Text="Alt Series:" TextAlignment="Right" Style="{StaticResource Bold}"/>
                                        <TextBlock Grid.Row="3" Grid.Column="1" Margin="3" Text="{Binding Alt_Series.Value}"/>
                                        <itk:AutoCompleteBox Grid.Row="3" Grid.Column="2" Margin="3" FontFamily="Segoe UI" Foreground="Gray" BorderBrush="Gray"
                                                             FilterMode="Contains"
                                                             ItemsSource="{Binding AltSeriesAutoCompleteEntities}"
                                                             Text="{Binding Alt_Series.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        </itk:AutoCompleteBox>
                                    </Grid>
                                    <Separator Grid.Row="4"/>
                                    <Grid Grid.Row="5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Margin="10,3" Text="Metadata" Style="{StaticResource Header}"/>
                                        <Button Grid.Column="1" Margin="3" Command="{Binding RefreshMetadata}">
                                            <Button.Style>
                                                <Style TargetType="Button">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding EditMode.Value}" Value="False">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                            <TextBlock Margin="3,0" Text="Update"/>
                                        </Button>
                                    </Grid>
                                    <Separator Grid.Row="6"/>
                                    <Grid Grid.Row="7">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="25"/>
                                            <RowDefinition Height="25"/>
                                            <RowDefinition Height="25"/>
                                            <RowDefinition Height="25"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="60"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Margin="3" Text="Duration:" TextAlignment="Right" Style="{StaticResource Bold}"/>
                                        <TextBlock Grid.Row="0" Grid.Column="1" Margin="3" Text="{Binding Duration.Value}"/>

                                        <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="3" Text="Bitrate:" TextAlignment="Right" Style="{StaticResource Bold}"/>
                                        <TextBlock Grid.Row="1" Grid.Column="1" Margin="3" Text="{Binding Bitrate.Value}"/>

                                        <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Margin="3" Text="Frame:" TextAlignment="Right" Style="{StaticResource Bold}"/>
                                        <TextBlock Grid.Row="2" Grid.Column="1" Margin="3" Text="{Binding Frame.Value}"/>

                                        <TextBlock Grid.Row="3" Grid.Column="0" VerticalAlignment="Center" Margin="3" Text="Format:" TextAlignment="Right" Style="{StaticResource Bold}"/>
                                        <TextBlock Grid.Row="3" Grid.Column="1" Margin="3" Text="{Binding Format.Value}"/>
                                    </Grid>
                                    <Separator Grid.Row="8"/>
                                    <Grid Grid.Row="9">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Margin="10,3" Text="File Info" Style="{StaticResource Header}"/>
                                        <Button Grid.Column="1" Margin="3" Command="{Binding RefreshFileInfo}">
                                            <Button.Style>
                                                <Style TargetType="Button">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding EditMode.Value}" Value="False">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                            <TextBlock Margin="3,0" Text="Update"/>
                                        </Button>
                                    </Grid>
                                    <Separator Grid.Row="10"/>
                                    <Grid Grid.Row="11">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="25"/>
                                            <RowDefinition Height="25"/>
                                            <RowDefinition Height="25"/>
                                            <RowDefinition Height="25"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="60"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        
                                        <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Margin="3" Text="File Path:" TextAlignment="Right" Style="{StaticResource Bold}"/>
                                        <TextBlock Grid.Row="0" Grid.Column="1" Margin="3" Text="{Binding FilePath.Value}"/>

                                        <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="3" Text="File Name:" TextAlignment="Right" Style="{StaticResource Bold}"/>
                                        <TextBlock Grid.Row="1" Grid.Column="1" Margin="3" Text="{Binding FileName.Value}"/>

                                        <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Margin="3" Text="Extention:" TextAlignment="Right" Style="{StaticResource Bold}"/>
                                        <TextBlock Grid.Row="2" Grid.Column="1" Margin="3" Text="{Binding Extention.Value}"/>

                                        <TextBlock Grid.Row="3" Grid.Column="0" VerticalAlignment="Center" Margin="3" Text="File Size:" TextAlignment="Right" Style="{StaticResource Bold}"/>
                                        <TextBlock Grid.Row="3" Grid.Column="1" Margin="3" Text="{Binding FileSize.Value}"/>                                        
                                    </Grid>
                                </Grid>
                            </ScrollViewer>
                        </tk:AccordionItem.Content>
                    </tk:AccordionItem>
                    <tk:AccordionItem HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsSelected="true">
                        <tk:AccordionItem.Header>
                            <TextBlock Margin="0,0,0,6" Text="Screenlist" Style="{StaticResource Bold}"/>
                        </tk:AccordionItem.Header>
                        <tk:AccordionItem.Content>
                            <Grid Height="140">
                                <Image Source="{Binding Screenlist.Value}">
                                    <Image.ContextMenu>
                                        <ContextMenu IsEnabled="{Binding Data.Value, Source={StaticResource EditMode}}" Visibility="{Binding Data.Value, Source={StaticResource EditMode}, Converter={StaticResource VisibilityConverter}}">
                                            <MenuItem Command="{Binding RefreshScreenlist}">
                                                <MenuItem.Header>
                                                    <TextBlock Text="Refresh"/>
                                                </MenuItem.Header>
                                            </MenuItem>
                                        </ContextMenu>
                                    </Image.ContextMenu>
                                    <Image.InputBindings>
                                        <MouseBinding MouseAction="LeftClick" Command="{Binding ShowScreenlist}"/>
                                    </Image.InputBindings>
                                </Image>
                                <Border Height="100" Width="100" Visibility="{Binding LoadingIndicatorVisibility.Value}" Background="White" CornerRadius="50">
                                    <Border.Resources>
                                        <ResourceDictionary Source="..\Styles\RadialProgressBar.xaml"/>
                                    </Border.Resources>
                                    <Viewbox>
                                        <ProgressBar Width="300" Height="300" Maximum="{Binding LoadingIndicatorMax.Value}" Value="{Binding LoadingIndicatorCurrent.Value}" Style="{StaticResource ProgressBarStyle}"/>
                                    </Viewbox>
                                </Border>
                            </Grid>
                        </tk:AccordionItem.Content>
                    </tk:AccordionItem>
                </tk:Accordion>
            </Border>
            <Border Grid.Row="3" Margin="5">
                <Grid Grid.Row="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition>
                            <ColumnDefinition.Style>
                                <Style TargetType="ColumnDefinition">
                                    <Setter Property="Width" Value="50"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding EditMode.Value}" Value="True">
                                            <Setter Property="Width" Value="0"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ColumnDefinition.Style>
                        </ColumnDefinition>
                        <ColumnDefinition>
                            <ColumnDefinition.Style>
                                <Style TargetType="ColumnDefinition">
                                    <Setter Property="Width" Value="80"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding EditMode.Value}" Value="False">
                                            <Setter Property="Width" Value="0"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ColumnDefinition.Style>
                        </ColumnDefinition>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="75"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="0" Margin="3" Command="{Binding EnableEditMode}">
                        <TextBlock Text="Edit"/>
                    </Button>
                    <Grid Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="30"/>
                        </Grid.ColumnDefinitions>
                        
                        <Button Grid.Column="0" Margin="3" Command="{Binding SaveChanges}">
                            <TextBlock Text="Save"/>
                        </Button>
                        
                        <Button Grid.Column="1" Margin="3" Command="{Binding RevertChanges}">
                            <TextBlock Text="X"/>
                        </Button>
                    </Grid>

                    <Button Grid.Column="3" Margin="3" Command="{Binding PlayNow}">
                        <TextBlock Text="Play"/>
                    </Button>
                    <Button Grid.Column="4" Margin="3" Command="{Binding AddToPlaylist}">
                        <TextBlock Text="+"/>
                    </Button>
                </Grid>
            </Border>
        </Grid>
    </Border>
</Page>
